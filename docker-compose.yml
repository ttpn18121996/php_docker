version: '3.1'

services:
  web:
    build:
      context: ./docker/web
      dockerfile: Dockerfile
      args:
        WWWGROUP: '${WWWGROUP}'
        NODE_VERSION: '${NODE_VERSION}'
        POSTGRES_VERSION: '${POSTGRES_VERSION}'
        APP_HOST: '${APP_HOST}'
    volumes:
      - ./:/var/www/html
    ports:
      - '${APP_PORT:-80}:80'
      - '443:443'
      - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
    environment:
      WWWUSER: '${WWWUSER}'
    networks:
      - 'docker-web'
    tty: true
  
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
    volumes:
      - 'docker-web-mysql:/var/lib/mysql'
      - './docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/create-testing-database.sh'
    ports:
      - '${FORWARD_MYSQL_PORT:-3306}:3306'
    networks:
      - 'docker-web'
  
  postgres:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
    volumes:
      - docker-web-postgres:/var/lib/postgresql/data
    ports:
      - '${FORWARD_POSTGRES_PORT:-5432}:5432'
    networks:
      - 'docker-web'
  
  adminer:
    image: "adminer:latest"
    ports:
      - "8084:8080"
    networks:
      - 'docker-web'
    environment:
        ADMINER_DESIGN: "pepa-linha"
        ADMINER_DEFAULT_SERVER: mysql
        ADMINER_PLUGINS: "tables-filter tinymce"

networks:
  docker-web:
    driver: bridge
volumes:
  docker-web-mysql:
    driver: local
  docker-web-postgres:
    driver: local

